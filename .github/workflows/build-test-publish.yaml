name: Build, Test, and Publish

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      publish_to_main:
        description: Publish to PyPI if tests successful
        required: true
        type: boolean
        default: false

jobs:

  check-version-txt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Tag with the release version
        run: |
          git tag $(cat version.txt)

  lint-format-and-static-code-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install pre-commit
        run: |
          pip install pre-commit
      - name: Lint, Format, and other static code quality checks
        run: |
          /bin/bash -x run.sh lint:ci

  build-wheel-and-sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install build CLI
        run: |
          pip install build
      - name: Build python package
        run: |
          /bin/bash -x run.sh build
      - name: Upload wheel and sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheel-and-sdist
          path: ./dist/*

  # execute-tests:  # This is skip since I will use tox to test for now
  #   needs:
  #     - build-wheel-and-sdist
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python 3.11
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: 3.11
  #     - name: Download wheel and sdist
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: wheel-and-sdist
  #         path: ./dist/
  #     - name: Install test dependencies
  #       run: |
  #         pip install .[test]
  #         pip install ./dist/*.whl
  #     - name: Run tests
  #       run: |
  #         /bin/bash -x run.sh test:ci

  execute-tests-tox:
    runs-on: ubuntu-latest
    needs:
      - build-wheel-and-sdist
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]  # Run tests on all versions
    steps:
      - uses: actions/checkout@v3
      - name: Download wheel and sdist
        uses: actions/download-artifact@v4
        with:
          name: wheel-and-sdist
          path: ./dist/
      - name: Install test dependencies
        run: |
          pip install tox tox-gh-actions
          pip install ./dist/*.whl
      - name: Run tests
        run: |
          tox

  publish:
    needs:
      # - execute-tests
      - execute-tests-tox
      - build-wheel-and-sdist
      - lint-format-and-static-code-checks
      - check-version-txt
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      # - name: Set up Python 3.11
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: 3.11
      # - name: Download wheel and sdist
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: wheel-and-sdist
      #     path: ./dist/
      # - name: Install twine
      #   run: |
      #     pip install twine
      # - name: Publish to TestPyPI
      #   run: |
      #     /bin/bash -x run.sh publish:test
      #   env:
      #     TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
      # - name: Publish to Prod PyPI
      #   run: |
      #     /bin/bash -x run.sh publish:prod
      #   env:
      #     PROD_PYPI_TOKEN: ${{ secrets.PROD_PYPI_TOKEN }}
      - name: Push tags
        run: |
          git tag $(cat version.txt)
          git push origin --tags
